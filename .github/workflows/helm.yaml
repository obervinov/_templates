# For monorepositories with helm charts
---
name: Helm charts bundle template

on: [workflow_call]  # yamllint disable-line rule:truthy

jobs:
  check-helm-charts:
    runs-on: ubuntu-latest
    permissions:
      actions: write
      checks: read
      contents: write
      packages: write
      security-events: write

    steps:
      - uses: actions/checkout@v4

      - name: Install helm and dependencies
        run: |
          # Install helm
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

      - name: Get helm-charts list in source directory
        id: get_source_charts
        run: |
          # Discovery helm charts
          charts=$(ls -d src/*)
          printf "Discovered charts:\n"
          for chart in ${charts[@]}; do
              printf " + %s\n" "${chart}"
          done
          echo "charts=`echo $charts`" >> $GITHUB_ENV

      - name: Template helm charts
        run: |
          printf "Templating helm charts:\n"
          for chart in "${{ steps.get_source_charts.outputs.charts }}[@]"; do
              printf " + %s\n" "${chart}"
              helm dependency update "${chart}/."
              if [[ -f "${chart}/values-test.yaml" ]]; then
                  helm template "${chart}/." -f "${chart}/values-test.yaml"
              else
                  helm template "${chart}/." -f "${chart}/values.yaml"
              fi
          done

      - name: Lint helm charts
        run: |
          # Lint helm charts
          printf "Running helm lint:\n"
          for chart in ${charts[@]}; do
              printf " + linting %s\n" "${chart}"
              helm lint ${chart}/.
          done


  build-helm-registry-template:
    runs-on: ubuntu-latest
    needs: check-helm-charts
    steps:
      - uses: actions/checkout@main
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Install helm and dependencies
        run: |
          # Install helm and dependencies
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
          helm plugin install https://github.com/karuppiah7890/helm-schema-gen.git

      - name: Get helm-charts list in source directory
        id: get_source_charts
        run: |
          # Discovery helm charts
          charts=$(ls -d src/*)
          printf "Discovered charts:\n"
          for chart in ${charts[@]}; do
              printf " + %s\n" "${chart}"
          done
          echo "charts=`echo $charts`" >> $GITHUB_ENV

      - name: Generate json schema for helm charts
        run: |
          # Generate json schema for helm charts
          printf "Creating json-schemas for charts:\n"
          for chart in ${charts[@]}; do
              printf " + %s\n" "${chart}"
              if [[ -f "${chart}/values.yaml" ]]; then
                  helm schema-gen ${chart}/values.yaml > ${chart}/values.schema.json
              else
                  printf "   values in %s/values.yaml doesn't exist\n   mearging *.example.yaml to values.yaml...\n" "${chart}"
                  yq ea '. as $item ireduce ({}; . * $item )' ${chart}/*.example.yaml > ${chart}/values.yaml
                  printf "   mearged all examples file in ${chart}/values.yaml successful\n"
                  helm schema-gen ${chart}/values.yaml > ${chart}/values.schema.json
              fi
          done

      - name: Build helm package
        run: |
          # Build helm package
          printf "Creating helm package:\n"
          for chart in ${charts[@]}; do
              printf " + %s\n" "${chart}"
              helm package ${chart}/ --dependency-update --destination ./charts
          done

      - name: Push helm packages to oci registry
        run: |
          # Push helm packages to oci registry
          printf "Pushing helm packages to oci registry\n"
          packages=$(ls -l charts/*.tgz |awk '{print $9}')
          for package in ${packages[@]}; do
              printf " + %s\n" "${package}"
              helm login -u ${{ github.actor }} -p ${{ github.token }} oci://ghcr.io/${{ github.actor }}/${GITHUB_REPOSITORY#${{ github.repository_owner }}/}
              helm push ${package} oci://ghcr.io/${{ github.actor }}/${GITHUB_REPOSITORY#${{ github.repository_owner }}/}
          done

      - name: Build helm index
        run: |
          # Build helm index
          printf "Building helm index.yaml\n"
          helm repo index charts --url https://helm-charts.charafee.cfd/charts --merge index.yaml
          mv charts/index.yaml index.yaml

      - name: Commit & Push changes
        uses: actions-js/push@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          message: "Build schemas, packages and index for helm repository by GitHub Actions: ${{ github.sha }}"
          branch: ${{ github.ref }}
