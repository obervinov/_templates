---
name: Build Docker and Packer images template

on: [workflow_call]  # yamllint disable-line rule:truthy

jobs:
  build-docker-images-template:
    runs-on: ubuntu-latest
    permissions:
      actions: write
      checks: read
      contents: write
      packages: write
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Find Dockerfiles
        id: find_dockerfiles
        run: |
          # Find all Dockerfiles in the repository
          echo "list=$(find . -type f -name Dockerfile | tr '\n' ' ')" >> $GITHUB_OUTPUT

      - name: Build and Push Docker images
        run: |
          # Build and push Docker images to GitHub Container Registry
          echo ${{ github.token }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          for dockerfile in ${{ steps.find_dockerfiles.outputs.list }}; do
            image_name=$(echo $dockerfile | awk -F '/' '{print $3}')
            image_tag=$(cat $dockerfile | grep -i 'ARG IMAGE_VERSION='| awk -F = '{print $2}')
            docker build -t ghcr.io/${{ github.repository }}/${image_name}:${image_tag} --build-arg="PROJECT_NAME=${{ github.event.repository.name }}" $(dirname $dockerfile) --quiet
            docker push ghcr.io/${{ github.repository }}/${image_name}:${image_tag}
            docker tag ghcr.io/${{ github.repository }}/${image_name}:${image_tag} ghcr.io/${{ github.repository }}/${image_name}:latest
            docker push ghcr.io/${{ github.repository }}/${image_name}:latest
          done

      - name: Install Trivy
        run: |
          # Install Trivy
          sudo apt-get install wget apt-transport-https gnupg lsb-release
          sudo wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          sudo echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy

      - name: Scan Docker images with Trivy
        run: |
          # Scan Docker images with Trivy
          mkdir results
          for dockerfile in ${{ steps.find_dockerfiles.outputs.list }}; do
            image_name=$(echo $dockerfile | awk -F '/' '{print $3}')
            image_tag=$(cat $dockerfile | grep -i 'LABEL org.opencontainers.image.version'| awk '{print $3}')
            trivy image --exit-code 0 --severity HIGH,CRITICAL ghcr.io/${{ github.repository }}/${image_name}:${image_tag} -f sarif -o results/trivy-results-${image_name}-${image_tag}.sarif
          done

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'results/'
