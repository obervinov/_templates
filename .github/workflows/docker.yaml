---
name: Build docker image template

on: [workflow_call]  # yamllint disable-line rule:truthy

jobs:
  build-docker-image-template:
    runs-on: ubuntu-latest
    permissions:
      actions: write
      checks: read
      contents: write
      packages: write
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Determine tag
        run: |
          # Determine tag from GITHUB_REF
          echo "TAG=$(if [ -z \"$GITHUB_REF_NAME\" ]; then echo ${GITHUB_REF#refs/tags/}; else echo ${GITHUB_REF_NAME//\//-}; fi)" >> $GITHUB_ENV

      - name: Determine project name
        run: |
          # Determine project name from GITHUB_REPOSITORY
          echo "PROJECT_NAME=${GITHUB_REPOSITORY#${{ github.repository_owner }}/}" >> $GITHUB_ENV

      - name: Determine project description
        run: |
          # Determine project description from GITHUB_REPOSITORY
          echo "PROJECT_DESCRIPTION=$(curl -s https://api.github.com/repos/${{ github.repository }} | jq .description | sed 's/\"//g')" >> $GITHUB_ENV

      - name: Build an image from Dockerfile
        run: |
          # Build image from Dockerfile
          docker build -t ghcr.io/${{ github.repository }}:${TAG} --build-arg="PROJECT_NAME=${{ github.event.repository.name }}" --build-arg="PROJECT_NAME=${PROJECT_NAME}" --build-arg="PROJECT_VERSION=${TAG}" --build-arg="PROJECT_DESCRIPTION=${PROJECT_DESCRIPTION}" .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@062f2592684a31eb3aa050cc61e7ca1451cecd3d
        with:
          image-ref: 'ghcr.io/${{ github.repository }}:${{ env.TAG }}'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Push docker image to ghcr
        run: |
          # Push image to ghcr
          docker login --username ${{ github.actor }} --password ${{ github.token }} ghcr.io/${{ github.actor }}/${GITHUB_REPOSITORY#${{ github.repository_owner }}/}
          docker push ghcr.io/${{ github.repository_owner }}/${GITHUB_REPOSITORY#${{ github.repository_owner }}/}:$TAG
