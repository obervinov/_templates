---
name: Build docker image template

on: [workflow_call]  # yamllint disable-line rule:truthy

jobs:
  build-docker-image-template:
    runs-on: ubuntu-latest
    permissions:
      actions: write
      checks: read
      contents: write
      packages: write
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Determine tag of the image from CHANGELOG.md
        run: |
          #  Determine tag of the image from CHANGELOG.md
          echo "TAG=$(grep -E '## v[0-9]?([0-9]).[0-9]?([0-9]).[0-9]?([0-9])' CHANGELOG.md | head -1 | grep -Eo 'v[0-9]?([0-9]).[0-9]?([0-9]).[0-9]?([0-9])')" >> $GITHUB_ENV

      - name: Determine project name
        run: |
          # Determine project name from GITHUB_REPOSITORY
          echo "PROJECT_NAME=${GITHUB_REPOSITORY#${{ github.repository_owner }}/}" >> $GITHUB_ENV

      - name: Determine project description
        run: |
          # Determine project description from GITHUB_REPOSITORY
          echo "PROJECT_DESCRIPTION=$(curl -s https://api.github.com/repos/${{ github.repository }} | jq .description | sed 's/\"//g')" >> $GITHUB_ENV

      - name: Build an image from Dockerfile
        run: |
          # Build image from Dockerfile
          if [ "${GITHUB_REF_NAME}" == 'main' ]; then
            image_tag=$TAG
          else
            image_tag=$TAG-dev
          fi
          docker build -t ghcr.io/${{ github.repository }}:${image_tag} \
            --build-arg="PROJECT_NAME=${{ github.event.repository.name }}" \
            --build-arg="PROJECT_NAME=${PROJECT_NAME}" \
            --build-arg="PROJECT_VERSION=${TAG}" \
            --build-arg="PROJECT_DESCRIPTION=${PROJECT_DESCRIPTION}" .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.25.0
        with:
          image-ref: 'ghcr.io/${{ github.repository }}:${{ env.TAG }}'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Push docker image to GHCR
        run: |
          # Push image to GitHub Container Registry
          echo ${{ github.token }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          if [ "${GITHUB_REF_NAME}" == 'main' ]; then
            docker push ghcr.io/${{ github.repository }}:$TAG
            docker tag ghcr.io/${{ github.repository }}:$TAG ghcr.io/${{ github.repository }}:latest
            docker push ghcr.io/${{ github.repository }}:latest
          else
            docker push ghcr.io/${{ github.repository }}:$TAG-dev
          fi

      - name: Delete untagged images from GitHub Container Registry
        continue-on-error: true
        uses: Chizkiyahu/delete-untagged-ghcr-action@v4
        with:
          token: ${{ secrets.PAT_GHCR_CLEANUP }}
          package_name: ${{ github.event.repository.name }}
          untagged_only: true
          except_untagged_multiplatform: false
          owner_type: 'user'
        if: ${{ github.ref == 'refs/heads/main' }}
